[{"/home/ronesilveira/Documentos/Projetos/Nodejs/Rocketseat/bootcamp/github-explorer/src/index.tsx":"1","/home/ronesilveira/Documentos/Projetos/Nodejs/Rocketseat/bootcamp/github-explorer/src/App.tsx":"2","/home/ronesilveira/Documentos/Projetos/Nodejs/Rocketseat/bootcamp/github-explorer/src/routes/index.tsx":"3","/home/ronesilveira/Documentos/Projetos/Nodejs/Rocketseat/bootcamp/github-explorer/src/pages/Dashboard/index.tsx":"4","/home/ronesilveira/Documentos/Projetos/Nodejs/Rocketseat/bootcamp/github-explorer/src/pages/Repository/index.tsx":"5","/home/ronesilveira/Documentos/Projetos/Nodejs/Rocketseat/bootcamp/github-explorer/src/pages/Dashboard/styles.ts":"6","/home/ronesilveira/Documentos/Projetos/Nodejs/Rocketseat/bootcamp/github-explorer/src/styles/global.ts":"7","/home/ronesilveira/Documentos/Projetos/Nodejs/Rocketseat/bootcamp/github-explorer/src/services/api.ts":"8","/home/ronesilveira/Documentos/Projetos/Nodejs/Rocketseat/bootcamp/github-explorer/src/pages/Repository/styles.ts":"9"},{"size":411,"mtime":1608655959250,"results":"10","hashOfConfig":"11"},{"size":296,"mtime":1609004439911,"results":"12","hashOfConfig":"11"},{"size":393,"mtime":1609267649947,"results":"13","hashOfConfig":"11"},{"size":2611,"mtime":1609267531623,"results":"14","hashOfConfig":"11"},{"size":2517,"mtime":1609868469812,"results":"15","hashOfConfig":"11"},{"size":1823,"mtime":1609264318963,"results":"16","hashOfConfig":"11"},{"size":550,"mtime":1609005645003,"results":"17","hashOfConfig":"11"},{"size":118,"mtime":1609074016296,"results":"18","hashOfConfig":"11"},{"size":1767,"mtime":1609789650110,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"o4hec8",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"/home/ronesilveira/Documentos/Projetos/Nodejs/Rocketseat/bootcamp/github-explorer/src/index.tsx",[],["40","41","42","43","44"],"/home/ronesilveira/Documentos/Projetos/Nodejs/Rocketseat/bootcamp/github-explorer/src/App.tsx",[],"/home/ronesilveira/Documentos/Projetos/Nodejs/Rocketseat/bootcamp/github-explorer/src/routes/index.tsx",[],"/home/ronesilveira/Documentos/Projetos/Nodejs/Rocketseat/bootcamp/github-explorer/src/pages/Dashboard/index.tsx",["45"],"import React, { useState, useEffect, FormEvent } from 'react';\nimport { FiChevronRight } from 'react-icons/fi';\nimport { Link } from 'react-router-dom';\nimport api from '../../services/api';\n\nimport logoImg from '../../assets/logo.svg';\n\nimport { Title, Form, Repositories, Error } from './styles';\n\ninterface Repository {\n  full_name: string;\n  description: string;\n  owner: {\n    login: string;\n    avatar_url: string;\n  };\n}\n\nconst Dashboard: React.FC = () => {\n  const [newRepo, setNewRepo] = useState('');\n  const [inputError, setInputError] = useState('');\n\n  const [repositories, setRepositories] = useState<Repository[]>(() => {\n    const storageRepositories = localStorage.getItem(\n      '@GithubExplorer:repositories',\n    );\n    if (storageRepositories) {\n      return JSON.parse(storageRepositories);\n    }\n    return [];\n  });\n\n  useEffect(() => {\n    localStorage.setItem(\n      '@GithubExplorer:repositories',\n      JSON.stringify(repositories),\n    );\n  }, [repositories]);\n\n  async function handleAddrepository(\n    event: FormEvent<HTMLFormElement>,\n  ): Promise<void> {\n    event.preventDefault();\n    if (!newRepo) {\n      setInputError('Digite o autor/nome do repositório');\n      return;\n    }\n\n    try {\n      const response = await api.get<Repository>(`repos/${newRepo}`);\n\n      const repository = response.data;\n\n      setRepositories([...repositories, repository]);\n      setNewRepo('');\n      setInputError('');\n\n      console.log(response.data);\n    } catch (err) {\n      setInputError('Erro na busca por esse repositório');\n    }\n  }\n\n  return (\n    <>\n      <img src={logoImg} alt=\"Github Explorer\" />\n      <Title>Explore repositorios no github</Title>\n\n      <Form hasError={!!inputError} onSubmit={handleAddrepository}>\n        <input\n          value={newRepo}\n          onChange={e => setNewRepo(e.target.value)}\n          placeholder=\"Digite o nome do repositorio\"\n        />\n        <button type=\"submit\">Pesquisar</button>\n      </Form>\n\n      {inputError && <Error>{inputError}</Error>}\n\n      <Repositories>\n        {repositories.map(repository => (\n          <Link\n            key={repository.full_name}\n            to={`/repositories/${repository.full_name}`}\n          >\n            <img\n              src={repository.owner.avatar_url}\n              alt={repository.owner.login}\n            />\n            <div>\n              <strong>{repository.full_name}</strong>\n              <p>{repository.description}</p>\n            </div>\n            <FiChevronRight size={20} />\n          </Link>\n        ))}\n      </Repositories>\n    </>\n  );\n};\nexport default Dashboard;\n","/home/ronesilveira/Documentos/Projetos/Nodejs/Rocketseat/bootcamp/github-explorer/src/pages/Repository/index.tsx",[],"/home/ronesilveira/Documentos/Projetos/Nodejs/Rocketseat/bootcamp/github-explorer/src/pages/Dashboard/styles.ts",[],"/home/ronesilveira/Documentos/Projetos/Nodejs/Rocketseat/bootcamp/github-explorer/src/styles/global.ts",[],"/home/ronesilveira/Documentos/Projetos/Nodejs/Rocketseat/bootcamp/github-explorer/src/services/api.ts",[],"/home/ronesilveira/Documentos/Projetos/Nodejs/Rocketseat/bootcamp/github-explorer/src/pages/Repository/styles.ts",[],{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","severity":1,"message":"57","line":58,"column":7,"nodeType":"58","messageId":"59","endLine":58,"endColumn":18},"lines-around-directive",["60"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"no-console","Unexpected console statement.","MemberExpression","unexpected","padding-line-between-statements"]